name: crackhash
services:
  manager:
    image: crackhash/manager:latest
    container_name: manager
    hostname: manager
    ports:
      - "8080:8080"
    networks:
      - docker-inner-network
    depends_on:
      - rabbitmq

  worker:
    image: crackhash/worker:latest
    container_name: worker
    hostname: worker
    expose:
      - "8081:8081"
    networks:
      - docker-inner-network
    depends_on:
      - manager
    
  mongodb1:
    image: mongo:4
    container_name: mongodb1
    hostname: mongodb1
    restart: always
    volumes:
      - mongodata1:/data/db
    networks:
      - docker-inner-network
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all" ]
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb1

  mongodb2:
    image: mongo:4
    container_name: mongodb2
    hostname: mongodb2
    restart: always
    volumes:
      - mongodata2:/data/db
    networks:
      - docker-inner-network
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all" ]
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb2

  mongodb3:
    image: mongo:4
    container_name: mongodb3
    hostname: mongodb3
    restart: always
    volumes:
      - mongodata3:/data/db
    networks:
      - docker-inner-network
    expose:
      - "27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all" ]
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb3

  mongosetup:
    image: "mongo-setup"
    build: "../mongo-setup"
    container_name: "mongosetup"
    depends_on:
      - mongodb1
    volumes:
      - mongostatus:/data/
    networks:
      - docker-inner-network

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: "rabbitmq"
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
       - docker-inner-network

networks:
  docker-inner-network:
    driver: bridge

volumes:
  mongodata1:
  mongodata2:
  mongodata3:
  mongostatus:
  rabbitmq:
